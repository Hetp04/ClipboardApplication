[package]
name = "briefcase"
version = "0.1.0"
description = "A Tauri App"
authors = ["you"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "briefcase_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
tauri = { version = "2", features = [] }
tauri-plugin-opener = "2"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
arboard = "3"                     # cross-platform clipboard crate
once_cell = "1.18"                # cache previous value
tokio = { version = "1", features = ["time"] }
base64 = "0.21"                   # for encoding icon data
image = "0.24"                    # For image processing

# We don't need objc anymore since we're using osascript
[target.'cfg(target_os = "macos")'.dependencies]
# Using command-line utilities (mdfind, sips, osascript) for reliable icon extraction

[target.'cfg(target_os = "windows")'.dependencies]
windows-sys = { version = "0.52", features = [
    "Win32_Foundation",
    "Win32_UI_WindowsAndMessaging",
    "Win32_System_Threading",
    "Win32_System_ProcessStatus", # For K32GetModuleFileNameExW
    "Win32_System_SystemServices",
    "Win32_UI_Shell", # For SHGetFileInfoW and ExtractIconExW
    "Win32_Graphics_Gdi", # For GetIconInfo, GetObjectW, GetBitmapBits, DeleteObject
] }

[target.'cfg(target_os = "linux")'.dependencies]
# Linux dependencies for icon handling are minimal
# All functionality is implemented using standard libraries and command-line tools

